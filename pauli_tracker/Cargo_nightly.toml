# This file is used as Cargo.toml for some tests and checks that require unstable
# cargo-features.
#
# I couldn't find a way to do that directly in the real Cargo.toml with something
# similar to the "cfg(coverage_nigthly)", so instead one has to replace the original
# Cargo.toml with this file, and then run the nightly compiler

# this enables the "public" key for dependencies (which is per default "false") and
# checks whether we export API from non-public dependencies; -> can bump private
# dependencies without updating major/minor semver (one should maybe double check,
# because this tool is a nightly tool)
cargo-features = ["public-dependency"]

[package]
name = "pauli_tracker"
version = "0.3.2-alpha.1"
authors = ["Jannis Ruh <ruh.j81@gmail.com>"]

edition = "2021"
rust-version = "1.65.0"

license = "MIT OR Apache-2.0"

repository = "https://github.com/taeruh/pauli_tracker"
description = "A library to track Pauli gates through a Clifford circuit."
keywords = ["quantum", "clifford", "mbqc"]
categories = ["simulation"]

readme = "../README.md"

[lib]
crate-type = ["lib"]

[features]
scheduler = ["dep:rustc-hash"]
circuit = ["dep:rand"]
experimental = []
serde = ["dep:serde", "hashbrown/serde", "bitvec?/serde", "bitvec_simd?/use_serde", "bit-vec?/serde"]

[dependencies]
thiserror = "1.0.44"
itertools = "0.11.0"
hashbrown = {version = "0.14.0", public = true }
serde = { version = "1.0.164", optional = true, features = ["derive"] }
bitvec = { version = "1.0.1", optional = true, public = true }
bitvec_simd = { version = "0.20.0", optional = true, public = true }
bit-vec = { version = "0.6.2", optional = true, public = true }
rand = { version = "0.8.0", optional = true }
rustc-hash = { version = "1.0.1", optional = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dev-dependencies]
criterion = "0.5.1"
proptest = "1.2.0"
coverage-helper = "0.2.0"
rand_pcg = "0.3.1"

[[bench]]
name = "paler"
harness = false
