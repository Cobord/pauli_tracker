# at the moment, I keep the building process separated from the publishing, because the
# package is unstable and fast-changing, and I want to be able to quickly manually build
# it without pubilshing

name: pypackage
on: [workflow_dispatch, workflow_call]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true
defaults:
  run:
    working-directory: ./python_lib
permissions:
  contents: read
  id-token: write
  pages: write

jobs:

  linux-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # for whatever reason, 3.10 turns into 3.1
        version: [8, 9, 10, 11, 12]
        container: [
          manylinux_2_28_x86_64,
          # these containers seems to stop after it started; passing the --platform
          # linux/arm64 below gets rid of a warning during the docker creation, but it is
          # still not running anymore when the checkout steps starts
          # manylinux_2_28_aarch64
        ]
    container:
      image: quay.io/pypa/${{ matrix.container }}
      # options: --platform linux/arm64 # cf. container comment above
    steps:
      - uses: actions/checkout@v4
      - name: Install stable rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        run: |
          py=/opt/python/cp3${{ matrix.version }}-cp3${{ matrix.version }}/bin
          ${py}/pip install maturin
          ${py}/maturin build \
            --interpreter ${py}/python \
            --release
      - uses: actions/upload-artifact@v4
        with:
          name: pauli_tracker-${{ matrix.container }}-3.${{ matrix.version }}-wheel
          path: python_lib/target/wheels/*

  linux-abi-wheel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [manylinux_2_28_x86_64]
    container: quay.io/pypa/${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
      - name: Install stable rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        # regarding --all-features: cf. comment in python_lib/Dockerfile
        run: |
          py=/opt/python/cp311-cp311/bin
          ${py}/pip install maturin
          ${py}/maturin build  \
            --interpreter ${py}/python \
            --release \
            --compatibility ${{ matrix.container }} \
            --all-features
      - uses: actions/upload-artifact@v4
        with:
          name: pauli_tracker-${{ matrix.container }}-3.8_abi3-wheel
          path: python_lib/target/wheels/*

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install stable rust
        uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Build sdists
        run: |
          python -m pip install maturin
          maturin sdist
      - uses: actions/upload-artifact@v4
        with:
          name: pauli_tracker-source-dist
          path: python_lib/target/wheels/*

  osx-and-windows-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: [8, 9, 10, 11, 12]
        os: [
          {os: macos-latest, target: x86_64-apple-darwin},
          {os: macos-latest, target: aarch64-apple-darwin},
          {os: windows-latest, target: x86_64-pc-windows-msvc},
          {os: windows-latest, target: x86_64-pc-windows-gnu}
        ]
    steps:
      - uses: actions/checkout@v4
      - name: Install stable rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: actions/setup-python@v5
        with:
          python-version: 3.${{ matrix.version }}
      - name: Build wheels
        run: |
          python -m pip install maturin
          maturin build --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: pauli_tracker-${{ matrix.os }}-${{ matrix.target }}-3.${{ matrix.version }}-wheel
          path: python_lib/target/wheels/*

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install stable rust
        uses: dtolnay/rust-toolchain@stable
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Build the docs
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install maturin sphinx sphinx-rtd-theme sphinx-autodoc-typehints
          make update_docs
      - uses: actions/upload-pages-artifact@v3
        with:
          path: "python_lib/dist/docs"
      - name: Deploy to pages
        uses: actions/deploy-pages@v4
