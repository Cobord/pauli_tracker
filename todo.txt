- implement a file streaming storage
- more tests
- maybe try to depend only on proptest when we really run proptest (for less
  dependencies in ci)

make create_dependency_graph more secure against wrong input, e.g., break the endless
loops

- more clifford gates
- maybe: in storage::vector when inserting, do the same as as in livevector if index to
  high, i.e., insert buffer stacks

before next major bump:
- Pauli::storage don't return reference
- PauliVec's new to default and instead a real new
- change Pauli Display and Debug
- maybe remove deref for storage::Vector
- use real error types when returning an error, not just Strings
- pauli_insert -> replace value and return old value if necessary; and similar (more
  like a hashmap)
- panics in create_dependency_graph to return error
- introduce a Node struct for DependencyGraph
- maybe put functions in storage.rs into StackStorage as default fns
- rename circuit measure_and_store_all to measure_and_store_remaining
- add a measure_remaining ot CliffordCircuit and or a qubit loop
- return Ok(measurement results) in the circuits measure methods

another major bump:
- rewrite LiveVector to be generic like Frames
- maybe make Map's and Vector's inner type private (making Map to a newtype) and remove
  Deref(Mut) impls
