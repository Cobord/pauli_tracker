scheduling:
- make it parallelize compatible; in progress
- sort the results and introduce break conditions; in progress
- overwork the api in general
- test it

- lock cargo hack
- lock msrv

- maybe derive macro for sweep::impl_into_iterator

- implement a file streaming storage
- more tests
- maybe try to depend only on proptest when we really run proptest (for less
  dependencies in ci)

- more clifford gates
- maybe: in storage::vector when inserting, do the same as as in livevector if index to
  high, i.e., insert buffer stacks

- add some standard test for autotraits like send, sync, ..

- write a better contributing.md

- write a proper todo.md

before next major bump:
- put dependency graph into its own module
- maybe remove deref for storage::Vector
- panics in create_dependency_graph to return error
- maybe introduce a Node struct for DependencyGraph
- maybe put functions in storage.rs into StackStorage as default fns

another major bump:
- rewrite LiveVector to be generic like Frames
- maybe make Map's and Vector's inner type private (making Map to a newtype) and remove
  Deref(Mut) impls
